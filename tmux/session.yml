name: simulation
root: ./
on_project_start: nums=$(python3 parser.py | tr '\n' " "); echo "UAV_NUMBERS=($nums)" > /tmp/random_uav_numbers; 
pre_window: source /tmp/random_uav_numbers; export RUN_TYPE=simulation; export UAV_TYPE=t650; export UAV_TYPE_LEADER=f450; export WORLD_NAME=simulation; export SENSORS="garmin_down"
startup_window: status
windows:
  - roscore:
      layout: tiled
      panes:
        - roscore
  - gazebo:
      layout: tiled
      panes:
        - waitForRos; roslaunch mrs_simulation simulation.launch gui:=true world_file:=/home/timur/user_ros_workspace/src/formation_v.2/worlds/grass_plane_color_boxes.world
  - status:
      layout: tiled
      panes:
        - export UAV_NAME="uav${UAV_NUMBERS[0]}"; waitForSimulation; roslaunch mrs_uav_status status.launch
        - export UAV_NAME="uav${UAV_NUMBERS[1]}"; waitForSimulation; roslaunch mrs_uav_status status.launch
        - export UAV_NAME="uav${UAV_NUMBERS[2]}"; waitForSimulation; roslaunch mrs_uav_status status.launch
  - spawn:
      layout: tiled
      panes:
        - waitForSimulation; rosservice call /mrs_drone_spawner/spawn "${UAV_NUMBERS[0]} $UAV_TYPE_LEADER --enable-rangefinder --enable-realsense-down --enable-realsense-front --pos  0 0 2 0.0"
        - waitForSimulation; rosservice call /mrs_drone_spawner/spawn "${UAV_NUMBERS[1]} $UAV_TYPE_LEADER --enable-rangefinder --enable-realsense-down --enable-realsense-front --pos -4 0 2 0.0"
        - waitForSimulation; rosservice call /mrs_drone_spawner/spawn "${UAV_NUMBERS[2]} $UAV_TYPE_LEADER --enable-rangefinder --enable-realsense-down --enable-realsense-front --pos  4 0 2 0.0"
  - control:
      layout: tiled
      panes:
        - export UAV_NAME="uav${UAV_NUMBERS[0]}"; waitForOdometry; roslaunch mrs_uav_general core.launch config_uav_manager:=./custom_configs/uav_manager.yaml
        - export UAV_NAME="uav${UAV_NUMBERS[1]}"; waitForOdometry; roslaunch mrs_uav_general core.launch config_uav_manager:=./custom_configs/uav_manager.yaml
        - export UAV_NAME="uav${UAV_NUMBERS[2]}"; waitForOdometry; roslaunch mrs_uav_general core.launch config_uav_manager:=./custom_configs/uav_manager.yaml
  - automatic_start:
      layout: tiled
      panes:
        - export UAV_NAME="uav${UAV_NUMBERS[0]}"; waitForSimulation; roslaunch mrs_uav_general automatic_start.launch
        - export UAV_NAME="uav${UAV_NUMBERS[1]}"; waitForSimulation; roslaunch mrs_uav_general automatic_start.launch
        - export UAV_NAME="uav${UAV_NUMBERS[2]}"; waitForSimulation; roslaunch mrs_uav_general automatic_start.launch
  - takeoff:
      layout: tiled
      panes:
        # { "uav${UAV_NUMBERS[1]}"
        - 'export UAV_NAME="uav${UAV_NUMBERS[0]}";
          waitForControl;
          rosservice call /$UAV_NAME/mavros/cmd/arming 1;
          sleep 2;
          rosservice call /$UAV_NAME/mavros/set_mode 0 offboard'
        # }
        # { "uav${UAV_NUMBERS[2]}"
        - 'export UAV_NAME="uav${UAV_NUMBERS[1]}";
          waitForControl;
          rosservice call /$UAV_NAME/mavros/cmd/arming 1;
          sleep 2;
          rosservice call /$UAV_NAME/mavros/set_mode 0 offboard'
        # }
        # { "uav${UAV_NUMBERS[3]}"
        - 'export UAV_NAME="uav${UAV_NUMBERS[2]}";
          waitForControl;
          rosservice call /$UAV_NAME/mavros/cmd/arming 1;
          sleep 2;
          rosservice call /$UAV_NAME/mavros/set_mode 0 offboard'
        # }
 
  # - gazebo_camera_follow:
      # layout: tiled
      # panes:
        # - waitForOdometry; gz camera -c gzclient_camera -f "uav${UAV_NUMBERS[1]}"; history -s gz camera -c gzclient_camera -f "uav${UAV_NUMBERS[1]}"
  - uav1:
      layout: tiled
      panes:
        - export UAV_NAME="uav${UAV_NUMBERS[0]}"; waitForRos; waitForOdometry; roslaunch blob_det_v2 blob_det_v2_sim.launch 
        - export UAV_NAME="uav${UAV_NUMBERS[0]}"; export NEIGH_NAME_1="uav${UAV_NUMBERS[1]}";export NEIGH_NAME_2="uav${UAV_NUMBERS[2]}"; waitForRos; waitForOdometry; roslaunch sensor_fusion_v2 sensor_fusion_v2.launch 
        - export UAV_NAME="uav${UAV_NUMBERS[0]}"; export NEIGH_NAME_1="uav${UAV_NUMBERS[1]}";export NEIGH_NAME_2="uav${UAV_NUMBERS[2]}"; waitForRos; waitForOdometry;roslaunch motion_optimiser_v2 motion_optimiser_v2.launch 
        - export UAV_NAME="uav${UAV_NUMBERS[0]}"; export UAV_NAME_1="uav${UAV_NUMBERS[0]}"; export UAV_NAME_2="uav${UAV_NUMBERS[1]}"; export UAV_NAME_3="uav${UAV_NUMBERS[2]}"; waitForRos; roslaunch  mode_commander mode_commander.launch
  - uav2:
      layout: tiled
      panes:
        - export UAV_NAME="uav${UAV_NUMBERS[1]}"; waitForRos;  waitForOdometry;roslaunch blob_det_v2 blob_det_v2_sim.launch 
        - export UAV_NAME="uav${UAV_NUMBERS[1]}"; export NEIGH_NAME_1="uav${UAV_NUMBERS[0]}";export NEIGH_NAME_2="uav${UAV_NUMBERS[2]}"; waitForRos; waitForOdometry;roslaunch sensor_fusion_v2 sensor_fusion_v2.launch 
        - export UAV_NAME="uav${UAV_NUMBERS[1]}"; export NEIGH_NAME_1="uav${UAV_NUMBERS[0]}";export NEIGH_NAME_2="uav${UAV_NUMBERS[2]}"; waitForRos; waitForOdometry;roslaunch motion_optimiser_v2 motion_optimiser_v2.launch 
        - export UAV_NAME="uav${UAV_NUMBERS[1]}"; export UAV_NAME_1="uav${UAV_NUMBERS[0]}"; export UAV_NAME_2="uav${UAV_NUMBERS[1]}"; export UAV_NAME_3="uav${UAV_NUMBERS[2]}"; waitForRos; roslaunch  mode_commander mode_commander.launch
  - uav3:
      layout: tiled
      panes:
        - export UAV_NAME="uav${UAV_NUMBERS[2]}"; waitForRos;  waitForOdometry;roslaunch blob_det_v2 blob_det_v2_sim.launch 
        - export UAV_NAME="uav${UAV_NUMBERS[2]}"; export NEIGH_NAME_1="uav${UAV_NUMBERS[0]}";export NEIGH_NAME_2="uav${UAV_NUMBERS[1]}"; waitForRos; waitForOdometry;roslaunch sensor_fusion_v2 sensor_fusion_v2.launch 
        - export UAV_NAME="uav${UAV_NUMBERS[2]}"; export NEIGH_NAME_1="uav${UAV_NUMBERS[0]}";export NEIGH_NAME_2="uav${UAV_NUMBERS[1]}"; waitForRos; waitForOdometry;roslaunch motion_optimiser_v2 motion_optimiser_v2.launch 
        - export UAV_NAME="uav${UAV_NUMBERS[2]}"; export UAV_NAME_1="uav${UAV_NUMBERS[0]}"; export UAV_NAME_2="uav${UAV_NUMBERS[1]}"; export UAV_NAME_3="uav${UAV_NUMBERS[2]}"; waitForRos; roslaunch  mode_commander mode_commander.launch
  
  # - mode:
      # layout: tiled
      # panes:
        # - export UAV_NAME_1="uav${UAV_NUMBERS[0]}"; export UAV_NAME_2="uav${UAV_NUMBERS[1]}"; export UAV_NAME_3="uav${UAV_NUMBERS[2]}"; waitForRos; roslaunch  mode_commander mode_commander.launch
          #  - gz_rate:
          #layout: tiled
          #panes:
          #- waitForOdometry; sleep 5; gz physics -u 125 #125
